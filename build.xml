<project name="Expression" default="jar" basedir=".">
    <description>Simple Java expression parser/evaluator</description>

    <!-- set build versioning -->

    <property name="version.expression" value="1.0"/>
    <property name="version.junit" value="4.13.2"/>
    <property name="version.hamcrest" value="1.3"/>


    <!-- set global properties for this build -->

    <property name="dir.build" location="build"/>
    <property name="dir.dist" location="dist"/>
    <property name="dir.libs" location="libs"/>
    <property name="dir.build.test" location="build-test"/>


    <!-- Set classpath -->

    <path id="classpath.compile" />

    <path id="classpath.compile.test">
        <path refid="classpath.compile"/>
        <pathelement location="${dir.build}"/>
        <pathelement path="libs/junit-${version.junit}.jar"/>
        <pathelement path="libs/hamcrest-core-${version.hamcrest}.jar"/>
    </path>

    <path id="classpath.test">
        <path refid="classpath.compile.test"/>
        <pathelement location="${dir.build.test}"/>
    </path>


    <!-- Initialization target -->

    <target name="init">
        <tstamp/>
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.dist}"/>
        <mkdir dir="${dir.build.test}"/>
    </target>


    <!-- Compilation target -->

    <target name="compile" depends="init" description="Compile Java source code">
        <javac srcdir="src/main/java" destdir="${dir.build}" includeantruntime="false">
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-g:lines,source"/>
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-Xdiags:verbose"/>
            <classpath refid="classpath.compile"/>
        </javac>
    </target>

    <target name="compile-tests" depends="compile,downloads" description="Compile Unit Tests">
        <javac srcdir="src/test/java"  destdir="${dir.build.test}" includeantruntime="false">
            <compilerarg value="-Xlint:unchecked"/>
            <compilerarg value="-Xlint:deprecation"/>
            <compilerarg value="-g:lines,source"/>
            <compilerarg value="-Xdiags:verbose"/>
            <classpath refid="classpath.compile.test"/>
        </javac>
    </target>


    <!-- Jar file target -->

    <target name="jar" depends="compile" description="generate the distribution">
        <mkdir dir="${dir.dist}/"/>
        <jar jarfile="${dir.dist}/expression-${version.expression}.jar">
            <fileset dir="${dir.build}"/>
        </jar>
    </target>


    <!-- Clean target -->

    <target name="clean" description="clean up">
        <delete dir="${dir.build}"/>
        <delete dir="${dir.dist}"/>
        <delete dir="${dir.build.test}"/>
        <delete dir="${dir.libs}"/>
    </target>
    


    <!-- Test target -->
    
    <target name="test" depends="compile-tests" description="Run unit tests">
        <junit printsummary="true" haltonfailure="no" fork="true">
            <classpath refid="classpath.test" />

            <batchtest fork="yes" >
                <formatter type="plain" usefile="false"/>
                <fileset dir="${dir.build.test}">
                    <include name="**/Test*.class" />
                </fileset>
            </batchtest>
        </junit>
    </target>


    <!-- Documentation target -->

    <target name="docs">
        <mkdir dir="docs"/>
        <javadoc packagenames="pls.*" destdir = "docs" version = "true" windowtitle = "Expression Library" private="yes">
            <fileset dir="src/main/java">
                <include name="**/*.java"/>
            </fileset>
            <classpath refid="classpath.compile"/>
            <doctitle><![CDATA[Expression Library]]></doctitle>
            <bottom><![CDATA[Copyright Â© 2023. All Rights Reserved.]]></bottom>
            <group title="Expression Library" packages="pls.*"/>
        </javadoc>
        <echo message = "java docs have been generated!" />
     </target>


    <!-- Download necessary binary data -->

    <target name="downloads" description="Download dependency libraries">
        <mkdir dir="${dir.libs}"/>
        <get skipexisting="true" src="https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/${version.hamcrest}/hamcrest-core-${version.hamcrest}.jar" dest="libs" />
        <get skipexisting="true" src="https://repo1.maven.org/maven2/junit/junit/${version.junit}/junit-${version.junit}.jar" dest="libs" />
    </target>


</project>
